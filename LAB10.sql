--1

CREATE TABLE CITIES (
LOCATION_ID,
STREET_ADDRESS,
POSTAL_CODE,
CITY,
STATE_PROVINCE,
COUNTRY_ID
)
AS SELECT LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID
FROM LOCATIONS
WHERE LOCATION_ID < 2000;
DESCRIBE CITIES;

--2

CREATE TABLE TOWNS (
LOCATION_ID,
STREET_ADDRESS,
POSTAL_CODE,
CITY,
STATE_PROVINCE,
COUNTRY_ID
)
AS SELECT LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID
FROM LOCATIONS
WHERE LOCATION_ID < 1500;
DESCRIBE TOWNS;

--3

PURGE RECYCLEBIN;
DROP TABLE TOWNS;
SELECT * FROM RECYCLEBIN;
--4

FLASHBACK TABLE TOWNS TO BEFORE DROP;
DESCRIBE TOWNS;
SELECT * FROM RECYCLEBIN;

--5
DROP TABLE TOWNS PURGE;
SELECT * FROM RECYCLEBIN;
--By purging it, the table the database does not place the table and its dependent objects into the recycle bin.

--6
CREATE VIEW CAN_CITY_VU
AS SELECT STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE
FROM CITIES
WHERE COUNTRY_ID LIKE 'CA';

SELECT * FROM CAN_CITY_VU;

--7
CREATE OR REPLACE VIEW CAN_CITY_VU (Str_Adr,P_Code,City,Prov)
AS SELECT STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE
FROM CITIES
WHERE COUNTRY_ID IN ('CA','IT');

SELECT * FROM CAN_CITY_VU;

--8

CREATE VIEW CITY_DNAME_VU
AS SELECT D.DEPARTMENT_NAME, E.CITY, E.STATE_PROVINCE
FROM LOCATIONS E LEFT JOIN DEPARTMENTS D
ON (D.LOCATION_ID = E.LOCATION_ID)
WHERE COUNTRY_ID IN ('CA','IT');
SELECT * FROM CITY_dname_vu;

-- 9

CREATE OR REPLACE VIEW CITY_DNAME_VU
(DName, City, Prov)
AS SELECT D.DEPARTMENT_NAME, E.CITY, E.STATE_PROVINCE
FROM LOCATIONS E LEFT JOIN DEPARTMENTS D
ON (D.LOCATION_ID = E.LOCATION_ID)
WHERE COUNTRY_ID NOT IN ('US');
SELECT * FROM CITY_DNAME_VU;

--10

--IT is no longer there